# -*- coding: utf-8 -*-
"""Untitled45.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1r5j2R--XHF9Hb3p0SMIx9FxGTbFDBj2b
"""

import pandas as pd
import re
from fuzzywuzzy import fuzz
import spacy

# Load the NLP model (optional for extracting medical-related entities)
nlp = spacy.load("en_core_web_sm")  # Replace with a medical-specific model if needed.

# Step 1: Load Dataset
try:
    file_path = "healthcare_dataset.csv"  # Replace with the actual dataset path.
    df = pd.read_csv(file_path)
    print(f"Data loaded successfully from {file_path}\n")
except FileNotFoundError:
    print(f"File not found: {file_path}. Please provide the correct file path.")
    exit()

# The following lines were inside the try block before, moving them outside
print("Initial DataFrame:")
print(df.head())

# Step 2: Normalize Columns

# Normalize Date Columns
def normalize_date(date):
    try:
        return pd.to_datetime(date, errors="coerce").strftime("%Y-%m-%d")
    except Exception:
        return None

if "Date of Admission" in df.columns:
    df["Date of Admission"] = df["Date of Admission"].apply(normalize_date)
if "Discharge Date" in df.columns:
    df["Discharge Date"] = df["Discharge Date"].apply(normalize_date)

# Standardize Categorical Fields (e.g., Admission Type, Gender)
if "Gender" in df.columns:
    df["Gender"] = df["Gender"].str.strip().str.upper()
if "Admission Type" in df.columns:
    df["Admission Type"] = df["Admission Type"].str.strip().str.title()

# Step 3: Detect Duplicate Records
def find_duplicates(column, threshold=90):
    duplicates = []
    for i, value in enumerate(column):
        for j, compare_value in enumerate(column):
            if i != j and fuzz.ratio(str(value), str(compare_value)) > threshold:
                duplicates.append((i, j))
    return duplicates

if "Name" in df.columns:
    duplicate_pairs = find_duplicates(df["Name"])
    print("Duplicate Pairs (Row Indices):", duplicate_pairs)

# Step 4: Normalize Text Fields (Medication, Test Results, Medical Condition)
def clean_text(text):
    if pd.isnull(text):
        return text
    return re.sub(r"[^a-zA-Z0-9\s]", "", text).strip().title()

text_columns = ["Medical Condition", "Medication", "Test Results"]
for col in text_columns:
    if col in df.columns:
        df[col] = df[col].apply(clean_text)

# Step 5: Output Cleaned Data
print("\nCleaned DataFrame:")
print(df.head())

# Save the cleaned data
output_file = "cleaned_healthcare_detailed_data.csv"
df.to_csv(output_file, index=False)
print(f"\nCleaned data saved to {output_file}")

pip install fuzzywuzzy